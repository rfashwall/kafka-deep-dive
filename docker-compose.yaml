version: "3"
services:
  inventory:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        project: ./cmd/inventory/
    restart: on-failure
    volumes:
      - inventory_vol:/usr/src/inventory/
    networks:
      - monorepo_net
  flyway:
    image: flyway/flyway
    command: -url=jdbc:postgresql://db:5432/kafka -user=postgres -password=postgres -connectRetries=5 migrate
    volumes:
      - .:/flyway/sql
    depends_on:
      - db
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - monorepo_net
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - monorepo_net
  pgadmin:
      container_name: pgadmin4_container
      image: dpage/pgadmin4
      restart: always
      environment:
        PGADMIN_DEFAULT_EMAIL: admin@admin.com
        PGADMIN_DEFAULT_PASSWORD: root
      ports:
        - "5050:80"
      networks:
        - monorepo_net
  db:
      image: postgres:10.5
      restart: always
      environment: 
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
        - POSTGRES_DB=kafka
      logging:
        options:
          max-size: 10m
          max-file: "3"
      ports:
        - '5432:5432'
      volumes:
        - ./postgres-data:/var/lib/postgresql/data
        # copy the sql script to create tables
        #- ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      networks:
        - monorepo_net

networks:
  monorepo_net:
    driver: bridge

volumes:
  inventory_vol:
